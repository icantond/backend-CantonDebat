paths:
  /api/products:
    get:
      summary: Obtiene el listado de todos los productos
      tags:
        - Products
      responses:
        "200":
          description: Los productos fueron obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#components/schemas/Product'
        "500":
          description: >
            Error interno del servidor, usualmente generado por error en las queries
            o un fallo de conexión.
  post:
      summary: Crea un nuevo producto
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/Product'
      responses:
        "201":
          description: El producto fue creado correctamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
        "400":
          description: Los datos enviados no son válidos
        "500":
          description: >
            Error interno del servidor, usualmente generado por error en las queries
            o un fallo de conexión.
  /api/products/{pid}:
    get:
      summary: Obtiene un producto por su ID
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          description: ID del producto a obtener
          schema:
            type: string
      responses:
        "200":
          description: El producto fue obtenido correctamente de la BDD
          content:
            application/json:
              schema:
                $ref: '#components/schemas/Product'
        "404":
          description: El producto no fue encontrado
        "500":
          description: >
            Error interno del servidor, usualmente generado por error en las queries
            o un fallo de conexión.
    delete:
      summary: Elimina un producto por su ID
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          description: ID del producto a eliminar
          schema:
            type: string
      requestBody:
        application/json:
          schema:
            $ref: '#components/schemas/Product'
      responses:
      "202":
        description: El producto fue eliminado correctamente
      "400":
        description: Los datos enviados no son válidos
      "404":
        description: El producto no fue encontrado
      "500":
        description: >
          Error interno del servidor, usualmente generado por error en las queries
          o un fallo de conexión.
    put:
      summary: Actualiza un producto por su ID
      tags:
        - Products
      parameters:
        - in: path
          name: pid
          required: true
          description: ID del producto a actualizar
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/Product'
      responses:
        "202":
          description: El producto fue actualizado correctamente
        "400":
          description: Los datos enviados no son válidos
        "404":
          description: El producto no fue encontrado
        "500":
          description: >
            Error interno del servidor, usualmente generado por error en las queries
            o un fallo de conexión.
  /api/products/mockingproducts:
    post:
      summary: Genera un listado de productos para pruebas
      tags:
        - Products
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#components/schemas/Product'
      responses:
        "201":
          description: Los productos fueron generados correctamente
        "500":  
          description: Error interno del servidor, usualmente generado por error en las queries o un fallo de conexión.
components:
  schemas:
    Product:
      type: object
      properties:
        _id:
          type: ObjectId
          description: Id autogenerado por MongoDB
        title:
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          description: Precio del producto
        stock:
          type: number
          description: Cantidad de productos en stock
        code:
          type: string
          description: Código del producto
        status:
          type: boolean
          description: Estado del producto (activo o inactivo)
        category:
          type: string
          description: Categoría del producto
        owner:
          type: ObjetcId
          description: Id del usuario que creó el producto
        thumbnail:
          type: string
          description: URL de la imagen del producto
      example:
        _id: ObjectId("65173a3fade97f753870bbf6")
        title: Laptop HP
        description: Laptop de alta gama con procesador Intel Core i7 y memoria RAM de 16 GB
        price: 459999
        stock: 10
        code: LAPHPI716
        status: true
        category: Computación
        owner: ObjectId("65173a3fade97f753870bbf5")
        thumbnail: "LAPHPI716.jpg"
